/****************************************************************************
 *   Generated by ACUITY 6.12.4
 *   Match ovxlib 1.1.53
 *
 *   Neural Network global header file
 ****************************************************************************/
#ifndef _VNN_GLOBAL_H_
#define _VNN_GLOBAL_H_

#define YOLOV3_TINY_CLASEE 1
#define HANDLE_OUT_TENSOR
#define PULL_GET_TENSOR_HANDLE
#define IMAGE_ADDR_ALIGN_START_SIZE 64
#define IMAGE_ADDR_ALIGN_BLOCK_SIZE 64

#ifdef __cplusplus
extern "C"
{
#endif

	typedef struct
	{
		uint32_t graph_input_idx;
		vsi_nn_preprocess_base_t *preprocesses;
		uint32_t preprocess_count;
	} vsi_nn_preprocess_map_element_t;

	typedef struct
	{
		uint32_t graph_output_idx;
		vsi_nn_postprocess_base_t *postprocesses;
		uint32_t postprocess_count;
	} vsi_nn_postprocess_map_element_t;

#ifndef VSI_SIZE_T
	typedef uint32_t vsi_size_t;
	typedef int32_t vsi_ssize_t;
#endif

#ifdef _WIN32
#define VSI_FSEEK _fseeki64
#else
#define VSI_FSEEK fseek
#endif

	/*
	 * This file will be deprecated in the future
	 */
	struct Vnn_Wrapper
	{
		vsi_nn_graph_t *graph;
		uint8_t *output_data[8];
		size_t output_data_size[8];
		vsi_nn_tensor_attr_t output_attr[8];
		uint8_t *saved_out[8];
		uint64_t runtime_ms;
		uint64_t runtime_us;
		int id;
		pthread_mutex_t mutex;
		bool is_busy;
		float *output_buffer[8];
		int frame_id;
	};

	typedef struct
	{
		char name[64];
		int name_id;
		int left_top_x;
		int left_top_y;
		int right_bot_x;
		int right_bot_y;
		float prob;
	} detected_obj_info;

	typedef struct
	{
		detected_obj_info obj[YOLOV3_TINY_CLASEE];
		uint32_t image_scaled_width;  /*obj坐标以此宽度参数为参考*/
		uint32_t image_scaled_height; /*obj坐标以此高度参数为参考*/
		int detected_class_num;
		int frame_id;
	} detected_list;

	// lyp，数据类型
	typedef enum
	{
		FILE_DATA,
		FILE_NB,
		FILE_NONE
	} data_file_type;

#ifdef __cplusplus
}
#endif

#endif